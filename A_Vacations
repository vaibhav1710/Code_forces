import java.util.*;
import java.awt.geom.AffineTransform;
import java.io.*;

public class fastTempE {

    static FastScanner fs = null;
    public static void main(String[] args) {


        fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);

        
		/*
		 0 -- g- ,c-
		 1-- g+,c-;
		 2- - g- ,c+
		 3-- g+,c+
		 */
        //1--g
        //2--c
        //3--b
        
       int n = fs.nextInt();
       int a[] = fs.readArray(n);
       int dp[] = new int[n];
       int count=0;
       if( a[0]==3) {
    	   dp[0] = 3;
       }else if(a[0]==1) {
    	  dp[0] = 2; 
       }else if(a[0]==2) {
    	   dp[0] = 1;
       }else {
    	   count++;
    	   dp[0]=3;
       }
       
       for(int i=1;i<n;i++) {
    	   if(a[i]==0) {
    		   count++;
    		   dp[i]=3;
    	   }else if(a[i]==1) {
    		   if(dp[i-1]==1 || dp[i-1]==3) {
    			   dp[i] = 2;
    		   }else {
    			   count++;
    			   dp[i]=3;
    		   }
    	   }else if(a[i]==2) {
    		   if(dp[i-1]==2 || dp[i-1]==3) {
    			   dp[i] = 1;
    		   }else {
    			   count++;
    			   dp[i] = 3;
    		   }
    	   }else {
    		   if(dp[i-1]==2 ) {
    			   dp[i] = 1;
     		   }else if(dp[i-1]==1) {
     			   dp[i] = 2;
     		   }
    		   else {
    			   dp[i] = 3;
    		   }
    	   }
       }
       
       out.println(count);
        
        out.close();
}
    

    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("");

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long[] readlongArray(int n){
            long[] a = new long[n];
            for (int i = 0; i < n; i++) a[i] = nextLong();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }



}
